    var body: some View {
        VStack {
            
            Text(locationManager.durationString)
            Button(action: {
                locationManager.setHome()
            }) {
                Text("Home")
                    .padding()
                    .background(Color.blue)
                    .foregroundColor(.white)
                    .cornerRadius(10)
            }
            .padding()
            HStack {
                Text("To Home: ")
                    .fontWeight(.bold)
                    .padding(.leading, 20)
                    .frame(width: 200, alignment: .leading)
                Text(String(Int(locationManager.distanceFromHome)))
            }
            HStack {
                Text("Total distance: ")
                    .fontWeight(.bold)
                    .padding(.leading, 20)
                    .frame(width: 200, alignment: .leading)
                Text(String(Int(locationManager.totalDistance)))
             }
            HStack {
                Text("Speed: ")
                    .fontWeight(.bold)
                    .padding(.leading, 20)
                    .frame(width: 200, alignment: .leading)
                Text(String(format: "%6.2f", locationManager.speed))
             }
            HStack {
                Text("Speed calc: ")
                    .fontWeight(.bold)
                    .padding(.leading, 20)
                    .frame(width: 200, alignment: .leading)
                Text(String(format: "%6.2f", locationManager.speedCalc))
             }
            HStack {
                Text("Speed avg: ")
                    .fontWeight(.bold)
                    .padding(.leading, 20)
                    .frame(width: 200, alignment: .leading)
                Text(String(format: "%6.2f", locationManager.speedAvg))
             }
            HStack {
                Text("Alert: ")
                    .fontWeight(.bold)
                    .padding(.leading, 20)
                    .frame(width: 200, alignment: .leading)
                Text(locationManager.alertMsg)
             }

            
            
            /*
            Button(action: {
                accManager.clearAll()
            }) {
                Text("Clear ACC")
                    .padding()
                    .background(Color.blue)
                    .foregroundColor(.white)
                    .cornerRadius(10)
            }
            .padding()
            */
            
            //Text("IsHome: " + String(locationManager.isHome))
            //Text("To Home / Total:")
            //Text(String(format: "%10.2f   %10.2f", locationManager.distanceFromHome, locationManager.totalDistance))
            //Text("Speed/Calc/Avg:")
            //Text(String(format: "%6.2f %6.2f %6.2f", locationManager.speed, locationManager.speedCalc,locationManager.speedAvg))
            //Text("Course/diff/Max diff:")
            //Text(String(format: "%6.2f %6.2f %6.2f", locationManager.course, locationManager.courseDiff, locationManager.maxCourseDiff))
            //Text(String(format: "Total / missed: %5d %5d", locationManager.totalCount, locationManager.missedCourseCount))

            //Text(String(format: "max:%7.2f %7.2f %7.2f %7.2f", accManager.maxAcX, accManager.maxAcY, accManager.maxAcZ, accManager.maxAc))
            //    .padding()
            //Text(String(format: "maxd:%7.2f %7.2f %7.2f %7.2f", accManager.maxDiffAcZ, accManager.maxDiffAcY, accManager.maxDiffAcZ, accManager.maxDiffTotal))
            //    .padding()
            
            //Text("acX: " + String(accManager.acX))
            //Text("acY: " + String(accManager.acY))
            //Text("acZ: " + String(accManager.acZ))
            //Text("accState: " + accManager.accState)
            //    .padding()
            //Text("Fs error:" + fsManager.firestoreError).foregroundColor(.red).padding()
            //   .padding()
            //Text("Alert: "  + locationManager.alertMsg);
        }

